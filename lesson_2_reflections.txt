What happens when you initialize a repository? Why do you need to do it?

it adds a .git. then you need to tell the .git which files you want to keep together in the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

the staging area shows what the next commit will include. i think this will help maybe when deciding when to make a commit.

How can you use the staging area to make sure you have one commit per logical change?

by separating changes you've made to different files. so, only putting files that logically go together for a specific change in the staging area, committing them together, and then adding other files for other changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

branches allow you to experiment and make different versions of a program without altering the original program. say to make an "easy mode" or a different language version.

How do the diagrams help you visualize the branch structure?

it's like a tree.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

merging two branches takes into account all of the changes, either additions or subtractions, made since they were last on the same line, and merges them together. we represent in the diagram because there was a time when they were separate branches of the tree but now they're grown back together.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

pros - if it merges automatically, it's faster/you don't have to think. cons - if it merges automatically, it might not make the right decision if there's a question about which code to keep or remove.